<?php 
/**
* Implement hook_install().
*
* Perform actions to set up the site for this profile.
*/
function drushu_install() {
  include_once DRUPAL_ROOT . '/profiles/minimal/minimal.install';
  minimal_install();
  $types = array(
    array(
      'type' => 'page',
      'name' => st('Basic page'),
      'base' => 'node_content',
      'description' => st("Use <em>basic pages</em> for your static content, such as an 'About us' page."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }
 
  // Default page to not be promoted and have comments disabled.
  variable_set('node_options_page', array());
  variable_set('node_preview_page', '0');
  variable_set('node_submitted_page', 0);
 
  // Don't display date and author information for page nodes by default.
  $theme_settings = variable_get('theme_settings', array());
  $theme_settings['default_favicon'] = FALSE;
  $theme_settings['favicon_path'] = '/sites/all/themes/drushu_theme/images/drushu.ico';
  $theme_settings['favicon_mimetype'] = 'image/vnd.microsoft.icon';
  variable_set('theme_settings', $theme_settings);


 // Any themes without keys here will get numeric keys and so will be enabled, but not placed into variables.
  $enable = array(
    'theme_default' => 'drushu',
    'admin_theme' => 'drushu',
    //'zen'
  );
  theme_enable($enable);

  $theme_drushu_settings = array(
    'toggle_logo' => 1,
    'toggle_name' => 1,
    'toggle_slogan' => 1,
    'toggle_node_user_picture' => 1,
    'toggle_comment_user_picture' => 1,
    'toggle_comment_user_verification' => 1,
    'toggle_favicon' => 1,
    'toggle_main_menu' => 1,
    'toggle_secondary_menu' => 1,
    'default_logo' => 0,
    'logo_path' => 'sites/all/themes/drushu_theme/images/logo.png',
    'logo_upload' => '',
    'default_favicon' => 0,
    'favicon_path' => 'sites/all/themes/drushu_theme/images/drushu.ico',
    'favicon_upload' => '',
    'favicon_mimetype' => 'image/vnd.microsoft.icon' );

  variable_set('theme_drushu_settings', $theme_settings);

  foreach ($enable as $var => $theme) {
    if (!is_numeric($var)) {
      variable_set($var, $theme);
    }
  }
  variable_set('node_admin_theme', 1);

  // Disable the default Bartik theme
  theme_disable(array('bartik'));

  // Disable all blocks for current theme
  //db_query("UPDATE {blocks} SET region = '' WHERE theme = 'drushu'");

  variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);
 
  // Set default input format to Full HTML
  variable_set('filter_default_format', '2');
 
  // Make old cache files be immediately deleted upon clear_cache
  variable_set('drupal_stale_file_handle', 1);
 
  // Pathauto default path
  //variable_set('pathauto_node_pattern', '[title-raw]');
 
  // Enable default permissions for system roles.
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', $filtered_html_permission));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')->fields(array('uid' => 1, 'rid' => $admin_role->rid))->execute();
}

?>
